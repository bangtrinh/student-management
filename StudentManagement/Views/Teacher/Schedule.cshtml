@model List<StudentManagement.Models.Schedule>

<h2 class="text-center">Lịch Giảng Dạy</h2>

<!-- Điều hướng tuần -->
<div class="text-center mb-3">
    <a href="@Url.Action("Schedule", new { weekStart = ViewBag.PrevWeek })" class="btn btn-outline-dark">←</a>
    <strong>@ViewBag.StartOfWeek.ToString("dd/MM/yyyy") - @ViewBag.EndOfWeek.ToString("dd/MM/yyyy")</strong>
    <a href="@Url.Action("Schedule", new { weekStart = ViewBag.NextWeek })" class="btn btn-outline-dark">→</a>
</div>

<!-- Bảng thời khóa biểu -->
<table class="table table-bordered text-center">
    <thead class="thead-dark">
        <tr>
            <th class="border">Tiết</th>
            @for (int i = 0; i < 7; i++)
            {
                var date = ViewBag.StartOfWeek.AddDays(i);
                <th class="border">@date.ToString("dddd") <br> (@date.ToString("dd/MM"))</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int lesson = 1; lesson <= 15; lesson++)
        {
            <tr>
                <td class="font-weight-bold border bg-light">Tiết @lesson</td>
                @for (int i = 0; i < 7; i++)
                {
                    var date = ViewBag.StartOfWeek.AddDays(i);
                    var schedule = Model.FirstOrDefault(s => s.ClassDate.Date == date.Date && GetLessonStart(s.StartTime) == lesson);

                    bool isCoveredByPreviousRowspan = Model.Any(s =>
                    s.ClassDate.Date == date.Date &&
                    GetLessonStart(s.StartTime) < lesson &&
                    GetLessonStart(s.StartTime) + GetLessonCount(s.StartTime, s.EndTime) > lesson
                    );

                    if (isCoveredByPreviousRowspan)
                    {
                        continue; // Bỏ qua ô này vì đã gộp ở dòng trước
                    }

                    if (schedule != null)
                    {
                        int rowspan = GetLessonCount(schedule.StartTime, schedule.EndTime);
                        <td rowspan="@rowspan" class="align-middle border bg-light">
                            <div class="font-weight-bold">@schedule.Course.CourseName</div>
                            <div>Mã: @schedule.CourseID</div>
                            <div>@schedule.StartTime - @schedule.EndTime</div>
                        </td>
                    }
                    else
                    {
                        <td class="border empty-cell">&nbsp;</td>
                    }
                }
            </tr>
        }
    </tbody>
</table>

@functions {
    int GetLessonStart(TimeSpan startTime)
    {
        var minutes = (int)startTime.TotalMinutes;
        var baseTime6h45 = 6 * 60 + 45; // 6h45 = 405 phút
        var baseTime9h20 = 9 * 60 + 20; // 9h20 = 560 phút
        var baseTime12h30 = 12 * 60 + 30; // 12h30 = 750 phút
        var baseTime18h = 18 * 60; // 18h = 1080 phút

        // Buổi sáng: Tiết 1-3 (6h45 - 9h00)
        if (minutes >= baseTime6h45 && minutes < baseTime6h45 + 45 * 3)
        {
            return 1 + (minutes - baseTime6h45) / 45;
        }
        // Buổi sáng: Tiết 4-6 (9h30 - 11h45)
        else if (minutes >= baseTime9h20 && minutes < baseTime9h20 + 45 * 3)
        {
            return 4 + (minutes - baseTime9h20) / 45;
        }
        // Buổi chiều: Tiết 7-12 (12h30 - 17h00)
        else if (minutes >= baseTime12h30 && minutes < baseTime12h30 + 45 * 6)
        {
            return 7 + (minutes - baseTime12h30) / 45;
        }
        // Buổi tối: Tiết 13-15 (18h - 20h15)
        else if (minutes >= baseTime18h && minutes < baseTime18h + 45 * 3)
        {
            return 13 + (minutes - baseTime18h) / 45;
        }
        return -1;
    }

    int GetLessonCount(TimeSpan startTime, TimeSpan endTime)
    {
        return (int)((endTime - startTime).TotalMinutes / 45);
    }
}